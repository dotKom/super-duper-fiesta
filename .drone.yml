pipeline:
  restore-cache:
    image: drillster/drone-volume-cache
    pull: true
    when:
      event: [push, pull_request, tag, deployment]
    restore: true
    mount:
      - ./node_modules
    volumes:
      - /tmp/cache:/cache

  setup:
    image: node:boron
    when:
      event: [push, pull_request, tag, deployment]
    commands:
      - yarn
  
  build:
    image: node:boron
    group: testing
    when:
      event: [push, pull_request, tag, deployment]
    commands:
      - npm run build:prod

  test:
    image: node:boron
    group: testing
    secrets: [codecov_token]
    environment:
      SDF_DATABASE_URL: "mongodb://127.0.0.1:27017"
    when:
      event: [push, pull_request, tag, deployment]
    commands:
      - yarn test
      - yarn codecov
  
  lint:
    image: node:boron
    group: testing
    when:
      event: [push, pull_request, tag, deployment]
    commands:
      - npm run lint

  rebuild-cache:
    image: drillster/drone-volume-cache
    pull: true
    when:
      event: [push, pull_request, tag, deployment]
    rebuild: true
    mount:
      - ./node_modules
    volumes:
      - /tmp/cache:/cache
  
  release:
    image: plugins/docker
    secrets: [docker_username, docker_password, sdf_sentry_dsn_frontend]
    when:
      event: tag
      status: success
    repo: registry.online.ntnu.no/dotkom/super-duper-fiesta
    registry: registry.online.ntnu.no
    dockerfile: Dockerfile.prod
    build_args_from_env: [sdf_sentry_dsn_frontend]
    tags:
      - "${DRONE_TAG}"
      - latest

  deploy:
    image: appleboy/drone-ssh
    pull: true
    secrets: [ssh_key]
    host: nansen.online.ntnu.no
    port: 22
    username: root
    key: ${SSH_KEY}
    command_timeout: 600s
    when:
      event: tag
      status: success
    script:
      - /usr/bin/docker pull registry.online.ntnu.no/dotkom/super-duper-fiesta:latest
      - /bin/systemctl restart super-duper-fiesta.service

